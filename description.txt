API:

+types/							            GET/POST
+types/{typeName}					  GET/PUT/DELETE
+tasks/								              GET/POST
+tasks/{taskId}							        GET/PUT/DELETE
runs								  GET/POST
runs/{runId}					  GET/PUT/DELETE
runs/{runId}/copy				  PUT
runs/{runId}/start			  PUT
runs/{runId}/stop				  PUT
runs/{runId}/results
runs/{runId}/results/{resultId}
machines							              GET/POST
machines/{machines-id}						  GET/PUT/DELETE


Types:
	Protocols : Http, JMS, SOAP, WebSockets
	Workflow: Delay, If-Else, For-Loop, Random

Entities:
task_type:
	name
	input_params[](list)
	output_params[](list)
task:
	task_id
	name
	type_name
	params[](map)
	body
	inputData[](map)
	outputData[](map)
run:
	run_id
	name
	status
	initial_count
	total_count
	ramp_up
	run_type (sequence/random)
	tasks[](map)
	start_ts
	end_ts
	result_id
result:
	result_id
	run_id
	output_params[](map)

Type Request:
	name
	input_params[](list)
	output_params[](list)

Type Response:
	message

Type Request example:
{
	"name" : "Http",
	"inputParams" : ["method", "url"],
	"outputParams" : ["code"]
}

Type Response example:
{
	"message" : "success"
}
	
Task Request:
	name
	task_type
	params
	inputData
	outputData
	
Task Response:
	message
	task_id

Task Request example:
{
  "name" : "new_task",
  "type" : "Http",
  "params" : {
    "method" : "GET",
    "url" : "http://google.com"
  },
  "inputData" : {
    "login" : "admin",
    "password" : "test"
  },
  "outputData" : {
    "token" : "test"
  }
}

Task Response example:
{
  "message" : "Success",
  "taskId" : "2729a247-4406-4b58-a1cb-8f42c53b2f91"
}
	

Run Request:
    name
    initial_count
    total_count
    ramp_up
    run_type (sequence/random)
    tasks[](map)
    start_ts
    end_ts

Run Response:
	message
	runId
	resultId
	status
	
Features:
	Multitasking
	Deploy and run from cloud
	CPU metrics
	Alarms
	Crawler (get list of urls)
	Bottleneck analysis
	Predict behaviour neural network

Protocols:
	HTTP
	SOAP
	REST
	JMS
	WebSockets

Stack:
	AngularJS
	Bootstrap
	HighCharts
	Dropwizard
	Akka
	Java
